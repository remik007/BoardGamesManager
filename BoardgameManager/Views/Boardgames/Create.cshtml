@model BoardgameManager.ViewModels.BoardgamesController.CreateBoardgameViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Boardgame</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MinAge, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MinAge, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MinAge, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BoardGameType, "Board Game Type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BoardGameType_Id, Model.AvailableBoardGameTypes, "", new { @class = "form-control chosen-select" })
                @Html.ValidationMessageFor(model => model.BoardGameType_Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="ReleaseDate" class="form-control datetimepicker text-box single-line " id="ReleaseDate" type="datetime">
                @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Home")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(".chosen-select").chosen({ allow_single_deselect: true });
        $(".datetimepicker").datetimepicker({
            pickTime: false,
            format: 'd-M-Y'
        });
        $(".datetimepicker").click(function () {
            $(".xdsoft_timepicker").hide();
        });

        $(document).ready(function () {
            var isReleaseDate =
             @{
                 if(Model.ReleaseDate != null)
                     {
                         @Html.Raw('"' + Model.ReleaseDate.Value.ToString("dd-MMM-yyyy") + '"');
                     }
                 else
                 {
                     @Html.Raw("'" + "'");
                 }
             } ;

            if (isReleaseDate != '')
            {
                $('#ReleaseDate').val(isReleaseDate);
            }
        })
        
    </script>
}
